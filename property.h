#ifndef PROPERTY_H
#define PROPERTY_H

#include <QString>
#include <QVector>
#include <QColor>
#include <QMutex>

#include <QDebug>

class Property
{


public:


    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    Property();
    Property(const Property& _property);
    Property(const QString _label, const QString _description, const QString _key, const int _type);


    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~Property();

    /***********************************************************
    * Operator                                                 *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    Property& operator=(const Property& _property);
    void copy(const Property* _property);

    /***********************************************************
    * Constant                                                 *
    ***********************************************************/

    static const int P_NOTYPE = 0;
    static const int P_FLOAT = 1;
    static const int P_INT = 2;
    static const int P_COLOR = 3;
    static const int P_FLOAT_POS = 4;
    static const int P_INT_POS = 5;

    /***********************************************************
    * Add a child                                              *
    ***********************************************************/

    void addChild(Property* _child);

    /***********************************************************
    * Mutator                                                  *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Float value                                           |
    // +-------------------------------------------------------+

    void setFloat(float _floatValue);

    // +-------------------------------------------------------+
    // | Int value                                             |
    // +-------------------------------------------------------+

    void setInt(int _intValue);

    // +-------------------------------------------------------+
    // | Color value                                           |
    // +-------------------------------------------------------+

    void setColor(QColor _colorValue);

    // +-------------------------------------------------------+
    // | Value for unknown type                                |
    // +-------------------------------------------------------+

    void setValue(QString _value);

    // +-------------------------------------------------------+
    // | Expanded                                              |
    // +-------------------------------------------------------+

    void setExpanded(bool _isExpanded);

    // +-------------------------------------------------------+
    // | Has parent                                            |
    // +-------------------------------------------------------+

    void setHasParent(bool _hasParent);

    /***********************************************************
    * Accessor                                                 *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Float value                                           |
    // +-------------------------------------------------------+

    float getFloat() const;

    // +-------------------------------------------------------+
    // | Float string                                          |
    // +-------------------------------------------------------+

    QString getFloatString() const;

    // +-------------------------------------------------------+
    // | Int value                                             |
    // +-------------------------------------------------------+

    int getInt() const;

    // +-------------------------------------------------------+
    // | Int string                                            |
    // +-------------------------------------------------------+

    QString getIntString() const;

    // +-------------------------------------------------------+
    // | Color value                                           |
    // +-------------------------------------------------------+

    QColor getColor() const;

    // +-------------------------------------------------------+
    // | Color RGB string                                      |
    // +-------------------------------------------------------+

    QString getColorString() const;

    // +-------------------------------------------------------+
    // | Get the value as a string no matter what is the type  |
    // +-------------------------------------------------------+

    QString getValueString() const;

    // +-------------------------------------------------------+
    // | Expanded                                              |
    // +-------------------------------------------------------+

    bool getExpanded() const;

    // +-------------------------------------------------------+
    // | Label                                                 |
    // +-------------------------------------------------------+

    QString getLabel() const;

    // +-------------------------------------------------------+
    // | Description                                           |
    // +-------------------------------------------------------+

    QString getDescription() const;

    // +-------------------------------------------------------+
    // | Key                                                   |
    // +-------------------------------------------------------+

    QString getKey() const;

    // +-------------------------------------------------------+
    // | Type                                                  |
    // +-------------------------------------------------------+

    int getType() const;

    // +-------------------------------------------------------+
    // | Number of children                                    |
    // +-------------------------------------------------------+

    int getNumberChildren() const;

    // +-------------------------------------------------------+
    // | Number of children (counting expanded children)       |
    // +-------------------------------------------------------+

    int getNumberChildrenRecursiveExpanded() const;

    // +-------------------------------------------------------+
    // | Number of children (counting all recursive children)  |
    // +-------------------------------------------------------+

    int getNumberChildrenRecursiveAll() const;

    // +-------------------------------------------------------+
    // | Children                                              |
    // +-------------------------------------------------------+

    Property* getChild(int _childIndex) const;

    // +-------------------------------------------------------+
    // | Property with a key                                   |
    // +-------------------------------------------------------+

    Property* getProperty(QString _key);

    // +-------------------------------------------------------+
    // | Has parent                                            |
    // +-------------------------------------------------------+

    bool getHasParent() const;

    // +-------------------------------------------------------+
    // | Is a leaf                                             |
    // +-------------------------------------------------------+

    bool isALeaf() const;

private:

    /***********************************************************
    * Private fields                                           *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | General                                               |
    // +-------------------------------------------------------+

    QString label;
    QString description;
    QString key;
    int type;
    int numberChildren;
    bool expanded;

    // +-------------------------------------------------------+
    // | Flag                                                  |
    // +-------------------------------------------------------+

    bool allowReadWrite;

    // +-------------------------------------------------------+
    // | Links                                                 |
    // +-------------------------------------------------------+

    QVector<Property*> listDown;
    bool hasParent;

    // +-------------------------------------------------------+
    // | Values                                                |
    // +-------------------------------------------------------+

    float floatValue;
    int intValue;
    QColor colorValue;

};

#endif // PROPERTY_H
