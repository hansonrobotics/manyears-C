#ifndef GRAPH2D_H
#define GRAPH2D_H

#include <QWidget>
#include <QtGlobal>
#include <QColor>
#include <QFont>
#include <QString>
#include <QMdiSubWindow>
#include <QResizeEvent>
#include <QPaintEvent>
#include <QPixmap>
#include <QPainter>
#include <QEvent>
#include <QCoreApplication>
#include <math.h>

#include "sourceBuffer.h"
#include "parametersManager.h"



class Graph2D: public QWidget
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    Graph2D(const char _typeView, const char _typeSource);

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~Graph2D();

    /***********************************************************
    * Size                                                     *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Resize                                                |
    // +-------------------------------------------------------+

    void resizeWindow(int _width, int _height);

    /***********************************************************
    * Events receivers                                         *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Resize                                                |
    // +-------------------------------------------------------+

    void setResizeReceiver(QObject* _receiver);

    /***********************************************************
    * Constant                                                 *
    ***********************************************************/

    static const char LATITUDE = 1;
    static const char LONGITUDE = 2;

    static const char POTENTIAL = 1;
    static const char TRACKED = 2;

protected:

    /***********************************************************
    * Events                                                   *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | User                                                  |
    // +-------------------------------------------------------+

    virtual bool event(QEvent* event);

    // +-------------------------------------------------------+
    // | Resize                                                |
    // +-------------------------------------------------------+

    void resizeEvent(QResizeEvent *resizeEvent);

    // +-------------------------------------------------------+
    // | Paint                                                 |
    // +-------------------------------------------------------+

    void paintEvent( QPaintEvent * );

private:

    /***********************************************************
    * Initialization                                           *
    ***********************************************************/

    void initGraph(const char _typeView, const char _typeSource);

    /***********************************************************
    * Parameters                                               *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Update parameters                                     |
    // +-------------------------------------------------------+

    void loadParameters(ConfigurationVector _configurationVector);

    /***********************************************************
    * Drawing                                                  *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Create the labels                                     |
    // +-------------------------------------------------------+

    void createLabels();

    // +-------------------------------------------------------+
    // | Create the horizontal axes                            |
    // +-------------------------------------------------------+

    void createHorizontalAxes();

    // +-------------------------------------------------------+
    // | Create the vertical axes                              |
    // +-------------------------------------------------------+

    void createVerticalAxes();

    // +-------------------------------------------------------+
    // | Create an empty grid                                  |
    // +-------------------------------------------------------+

    void createEmptyGrid();

    // +-------------------------------------------------------+
    // | Create an empty widget                                |
    // +-------------------------------------------------------+

    void createEmptyAll();

    // +-------------------------------------------------------+
    // | Insert the horizontal axes                            |
    // +-------------------------------------------------------+

    void insertHorizontalAxes(const int _left);

    // +-------------------------------------------------------+
    // | Insert the vertical axes                              |
    // +-------------------------------------------------------+

    void insertVerticalAxes(const int _left);

    // +-------------------------------------------------------+
    // | Shift grid                                            |
    // +-------------------------------------------------------+

    void shiftGridByOneFrame();

    // +-------------------------------------------------------+
    // | Draw the labels                                       |
    // +-------------------------------------------------------+

    void drawLabels();

    // +-------------------------------------------------------+
    // | Draw the grid                                         |
    // +-------------------------------------------------------+

    void drawGrid();

    // +-------------------------------------------------------+
    // | Draw the new sources                                  |
    // +-------------------------------------------------------+

    void drawSources(QList<SourceDisplayed> _sources);

    // +-------------------------------------------------------+
    // | Draw all the potential sources                        |
    // +-------------------------------------------------------+

    void drawAllSources(QList< QList<SourceDisplayed> > _sources);

    /***********************************************************
    * Fields                                                   *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Type of graph                                         |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | Type of view (latitude/longitude)                 |
        // +---------------------------------------------------+

        char typeView;

        // +---------------------------------------------------+
        // | Type of source (potential/tracked)                |
        // +---------------------------------------------------+

        char typeSource;   

    // +-------------------------------------------------------+
    // | Pixel map                                             |
    // +-------------------------------------------------------+

        // Pixel map
        QPixmap *allPixelMap;

        // Grid pixel map
        QPixmap *gridPixelMap;

        // Label pixel map
        QPixmap *labelPixelMap;

        // Horizontal bars pixel map
        QPixmap *hBarPixelMap;

        // Vertical bar pixel map
        QPixmap *vBarPixelMap;

    // +-------------------------------------------------------+
    // | Graph pixel computation                               |
    // +-------------------------------------------------------+

        // Pixel accumulator
        float pixelAccumulator;

        // Interval accumulator
        float intervalAccumulator;

        // Time per frame
        float timePerFrame;

        // Time per pixel
        float timePerPixel;

        // Pixel per frame
        float pixelPerFrame;

    // +-------------------------------------------------------+
    // | Dimensions                                            |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | Vertical spacers                                  |
        // +---------------------------------------------------+

        int vspacertop;
        int vspacerbottom;

        // +---------------------------------------------------+
        // | Horizontal spacer                                 |
        // +---------------------------------------------------+

        int hspacerleft;
        int hspacercenter;
        int hspacerright;

        // +---------------------------------------------------+
        // | Label                                             |
        // +---------------------------------------------------+

        int labelWidth;
        int labelHeight;

        // +---------------------------------------------------+
        // | Grid                                              |
        // +---------------------------------------------------+

        int gridWidth;
        int gridHeight;

        // +---------------------------------------------------+
        // | Points                                            |
        // +---------------------------------------------------+

        int pointSize;

    // +-------------------------------------------------------+
    // | Range                                                 |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | Horizontal range                                  |
        // +---------------------------------------------------+

        float xView;
        float xAfter;
        float xInterval;
        float xOffset;

        // +---------------------------------------------------+
        // | Vertical range                                    |
        // +---------------------------------------------------+

        float yMin;
        float yMax;
        float yInterval;

    // +-------------------------------------------------------+
    // | Colors                                                |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | All                                               |
        // +---------------------------------------------------+

        QColor backgroundColor;

        // +---------------------------------------------------+
        // | Grid                                              |
        // +---------------------------------------------------+

        QColor gridHorizontalBarsColor;
        QColor gridVerticalBarsColor;

        // +---------------------------------------------------+
        // | Label                                             |
        // +---------------------------------------------------+

        QColor labelColor;

    // +-------------------------------------------------------+
    // | Text                                                  |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | Label                                             |
        // +---------------------------------------------------+

        QFont labelTextFont;

    // +-------------------------------------------------------+
    // | Events receivers                                      |
    // +-------------------------------------------------------+

        // +---------------------------------------------------+
        // | Resize                                            |
        // +---------------------------------------------------+

        QObject* resizeReceiver;

    // +-------------------------------------------------------+
    // | Parameters                                            |
    // +-------------------------------------------------------+

        ParametersManager *parametersManager;

};



#endif
