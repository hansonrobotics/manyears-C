#ifndef SOURCEEVENTS_H
#define SOURCEEVENTS_H

#include <QEvent>
#include <QList>
#include <QVector>

// XxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxX
// x                                                           x
// x Sources                                                   x
// x                                                           x
// XxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxX

// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// % Potential Source                                          %
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

class PotentialSource
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    PotentialSource(float _X, float _Y, float _Z, float _E, int _index);
    PotentialSource(const PotentialSource& _potentialSource);
    PotentialSource();

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~PotentialSource();

    /***********************************************************
    * Operators                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    PotentialSource& operator=(const PotentialSource& _potentialSource);

    /***********************************************************
    * Accessors                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | X                                                     |
    // +-------------------------------------------------------+

    float getX() const;

    // +-------------------------------------------------------+
    // | Y                                                     |
    // +-------------------------------------------------------+

    float getY() const;

    // +-------------------------------------------------------+
    // | Z                                                     |
    // +-------------------------------------------------------+

    float getZ() const;

    // +-------------------------------------------------------+
    // | E                                                     |
    // +-------------------------------------------------------+

    float getE() const;

    // +-------------------------------------------------------+
    // | Index                                                 |
    // +-------------------------------------------------------+

    int getIndex() const;

    /***********************************************************
    * Mutator                                                  *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | X                                                     |
    // +-------------------------------------------------------+

    void setX(float _X);

    // +-------------------------------------------------------+
    // | Y                                                     |
    // +-------------------------------------------------------+

    void setY(float _Y);

    // +-------------------------------------------------------+
    // | Z                                                     |
    // +-------------------------------------------------------+

    void setZ(float _Z);

    // +-------------------------------------------------------+
    // | E                                                     |
    // +-------------------------------------------------------+

    void setE(float _E);

    // +-------------------------------------------------------+
    // | Index                                                 |
    // +-------------------------------------------------------+

    void setIndex(int _index);

    /***********************************************************
    * Fields                                                   *
    ***********************************************************/

    float X;
    float Y;
    float Z;
    float E;
    int index;

};

// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// % Tracked Source                                            %
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

class TrackedSource
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    TrackedSource(float _X, float _Y, float _Z, int _ID);
    TrackedSource(const TrackedSource& _trackedSource);
    TrackedSource();

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~TrackedSource();

    /***********************************************************
    * Operators                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    TrackedSource& operator=(const TrackedSource& _trackedSource);

    /***********************************************************
    * Accessors                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | X                                                     |
    // +-------------------------------------------------------+

    float getX() const;

    // +-------------------------------------------------------+
    // | Y                                                     |
    // +-------------------------------------------------------+

    float getY() const;

    // +-------------------------------------------------------+
    // | Z                                                     |
    // +-------------------------------------------------------+

    float getZ() const;

    // +-------------------------------------------------------+
    // | ID                                                    |
    // +-------------------------------------------------------+

    int getID() const;

    /***********************************************************
    * Mutator                                                  *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | X                                                     |
    // +-------------------------------------------------------+

    void setX(float _X);

    // +-------------------------------------------------------+
    // | Y                                                     |
    // +-------------------------------------------------------+

    void setY(float _Y);

    // +-------------------------------------------------------+
    // | Z                                                     |
    // +-------------------------------------------------------+

    void setZ(float _Z);

    // +-------------------------------------------------------+
    // | ID                                                    |
    // +-------------------------------------------------------+

    void setID(int _ID);

    /***********************************************************
    * Fields                                                   *
    ***********************************************************/

    float X;
    float Y;
    float Z;
    int ID;

};

// XxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxX
// x                                                           x
// x Sources Events                                            x
// x                                                           x
// XxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxX

// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// % Potential source                                          %
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

class PotentialSourceEvent: public QEvent
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    PotentialSourceEvent(QList<PotentialSource> _list);

    PotentialSourceEvent();

    PotentialSourceEvent(const PotentialSourceEvent &e);

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~PotentialSourceEvent();

    /***********************************************************
    * Operators                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    PotentialSourceEvent& operator=(const PotentialSourceEvent& _potentialSourceEvent);

    /***********************************************************
    * Accessors                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | PotentialSource                                       |
    // +-------------------------------------------------------+

    PotentialSource getPotentialSource(const int indexSource) const;

    // +-------------------------------------------------------+
    // | List                                                  |
    // +-------------------------------------------------------+

    QList<PotentialSource> getList() const;

    // +-------------------------------------------------------+
    // | Size                                                  |
    // +-------------------------------------------------------+

    int getListSize() const;

    /***********************************************************
    * Mutators                                                 *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | PotentialSource                                       |
    // +-------------------------------------------------------+

    void pushSource(PotentialSource _source);

    /***********************************************************
    * Fields                                                   *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | List of potential sources                             |
    // +-------------------------------------------------------+

    QList<PotentialSource> list;

};

// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// % Tracked source                                            %
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

class TrackedSourceEvent: public QEvent
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    TrackedSourceEvent(QList<TrackedSource> _list);

    TrackedSourceEvent();

    TrackedSourceEvent(const TrackedSourceEvent &e);

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~TrackedSourceEvent();

    /***********************************************************
    * Operators                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    TrackedSourceEvent& operator=(const TrackedSourceEvent& _trackedSourceEvent);

    /***********************************************************
    * Accessors                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | PotentialSource                                       |
    // +-------------------------------------------------------+

    TrackedSource getTrackedSource(const int indexSource) const;

    // +-------------------------------------------------------+
    // | Size                                                  |
    // +-------------------------------------------------------+

    int getListSize() const;

    /***********************************************************
    * Mutators                                                 *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | PotentialSource                                       |
    // +-------------------------------------------------------+

    void pushSource(TrackedSource _source);

    /***********************************************************
    * Fields                                                   *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | List of potential sources                             |
    // +-------------------------------------------------------+

    QList<TrackedSource> list;

};



// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// % Separated source                                          %
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

class SeparatedSourceEvent: public QEvent
{

public:

    /***********************************************************
    * Constructor                                              *
    ***********************************************************/

    SeparatedSourceEvent(const QVector<float> &data);

    SeparatedSourceEvent();

    SeparatedSourceEvent(const SeparatedSourceEvent &e);

    /***********************************************************
    * Destructor                                               *
    ***********************************************************/

    ~SeparatedSourceEvent();

    /***********************************************************
    * Operators                                                *
    ***********************************************************/

    // +-------------------------------------------------------+
    // | Equal                                                 |
    // +-------------------------------------------------------+

    SeparatedSourceEvent& operator=(const SeparatedSourceEvent& _separatedSourceEvent);



    QVector<float> m_data;

};

#endif
